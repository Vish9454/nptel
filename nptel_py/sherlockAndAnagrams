from collections import Counter
def sherlockAndAnagrams(s):
    n = len(s);lst_full=[];sum=0
    for i in range(0,n+1):
        for j in range(i+1,n+1):
            lst_full.append(''.join(sorted(s[i:j])))
    print(lst_full)
    n=Counter(lst_full)
    print(n)
    for key,value in n.items():
        sum+=value*(value-1)//2   #permuttion lagana hai yaaha per becoz the count of each letter is given
    print(sum)

sherlockAndAnagrams("kkkk")

['k', 'kk', 'kkk', 'kkkk', 'k', 'kk', 'kkk', 'k', 'kk', 'k']
Counter({'k': 4, 'kk': 3, 'kkk': 2, 'kkkk': 1})
10

###############################################################################################################################################
def sherlockAndAnagrams(s):
        res=0
        n=len(s)
        for i in range(1,n):
            d={}
            for j in range(n-i+1):
                subs=''.join(sorted(s[j:j+i]))
                if subs not in d:
                    d[subs]=1
                else:
                    d[subs]+=1
                res+=d[subs]-1
                print(subs,"=",res)

        print(res)

sherlockAndAnagrams("abba")


a = 0
b = 0
b = 1
a = 2
ab = 2
bb = 2
ab = 3
abb = 3
abb = 4
4
